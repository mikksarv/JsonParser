<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.example.JsonParserTest" tests="10" skipped="0" failures="1" errors="0" timestamp="2024-10-30T15:17:52" hostname="vali-it-4" time="0.069">
  <properties/>
  <testcase name="jsonNull()" classname="org.example.JsonParserTest" time="0.016"/>
  <testcase name="mixedTestType()" classname="org.example.JsonParserTest" time="0.026">
    <failure message="java.lang.IllegalArgumentException: Oh nooo! Not a Map" type="java.lang.IllegalArgumentException">java.lang.IllegalArgumentException: Oh nooo! Not a Map
	at org.example.JsonParser.parseObject(JsonParser.java:80)
	at org.example.JsonParser.parse(JsonParser.java:31)
	at org.example.JsonParser.parse(JsonParser.java:13)
	at org.example.JsonParser.parseObject(JsonParser.java:71)
	at org.example.JsonParser.parse(JsonParser.java:31)
	at org.example.JsonParser.parse(JsonParser.java:13)
	at org.example.JsonParserTest.mixedTestType(JsonParserTest.java:121)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:119)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:66)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="mixedTestTypeThird()" classname="org.example.JsonParserTest" time="0.003"/>
  <testcase name="object()" classname="org.example.JsonParserTest" time="0.003"/>
  <testcase name="string()" classname="org.example.JsonParserTest" time="0.001"/>
  <testcase name="stringObject()" classname="org.example.JsonParserTest" time="0.006"/>
  <testcase name="bool()" classname="org.example.JsonParserTest" time="0.001"/>
  <testcase name="array()" classname="org.example.JsonParserTest" time="0.001"/>
  <testcase name="doubleNumber()" classname="org.example.JsonParserTest" time="0.001"/>
  <testcase name="integer()" classname="org.example.JsonParserTest" time="0.002"/>
  <system-out><![CDATA[1 
 .
1   .

1   .
 
1   .
  
1   .
   
1 " .
    
1 e .
    "
1 " .
    "e
1 : .
    "e"
1   .
    "e":
2 { .
    "e": 
2 
 .
    "e": {
2   .
    "e": {

2   .
    "e": {
 
2   .
    "e": {
  
2   .
    "e": {
   
2   .
    "e": {
    
2   .
    "e": {
     
2   .
    "e": {
      
2   .
    "e": {
       
2 " .
    "e": {
        
2 i .
    "e": {
        "
2 d .
    "e": {
        "i
2 " .
    "e": {
        "id
2 : .
    "e": {
        "id"
2   .
    "e": {
        "id":
2 3 .
    "e": {
        "id": 
2 4 .
    "e": {
        "id": 3
2 
 .
    "e": {
        "id": 34
2   .
    "e": {
        "id": 34

2   .
    "e": {
        "id": 34
 
2   .
    "e": {
        "id": 34
  
2   .
    "e": {
        "id": 34
   
1 
 .
1   .

1   .
 
1   .
  
1   .
   
1   .
    
1   .
     
1   .
      
1   .
       
1 " .
        
1 i .
        "
1 d .
        "i
1 " .
        "id
1 : .
        "id"
1   .
        "id":
1 3 .
        "id": 
1 4 .
        "id": 3
1 
 .
        "id": 34
1   .
        "id": 34

1   .
        "id": 34
 
1   .
        "id": 34
  
1   .
        "id": 34
   
{id=34} 0 teskt siia
1 , .
    "e": {
        "id": 34
    }
1 
 .
1   .

1   .
 
1   .
  
1   .
   
1   .
    
1   .
     
1   .
      
1   .
       
1 " .
        
1 i .
        "
1 d .
        "i
1 " .
        "id
{} 1 teskt siia
1 
 .
1   .

1   .
 
1   .
  
1   .
   
1 " .
    
1 i .
    "
1 d .
    "i
1 " .
    "id
1 : .
    "id"
1   .
    "id":
1 3 .
    "id": 
1 4 .
    "id": 3
1 , .
    "id": 34
1 
 .,
1   .,

1   .,
 
1   .,
  
1   .,
   
1 " .,
    
1 g .,
    "
1 t .,
    "g
1 " .,
    "gt
1 : .,
    "gt"
1   .,
    "gt":
1 3 .,
    "gt": 
1 5 .,
    "gt": 3
1 
 .,
    "gt": 35
{id=34, gt=35} 0 teskt siia
{} 0 teskt siia
1 " .
1 k ."
1 e ."k
1 y ."ke
1 " ."key
1 : ."key"
1   ."key":
1 1 ."key": 
{key=1} 0 teskt siia
1 " .
1 n ."
1 a ."n
1 m ."na
1 e ."nam
1 " ."name
1 : ."name"
1   ."name":
1 " ."name": 
1 v ."name": "
1 a ."name": "v
1 l ."name": "va
1 u ."name": "val
1 e ."name": "valu
1 " ."name": "value
{name=value} 0 teskt siia
1 
 .
1   .

1   .
 
1   .
  
1   .
   
1 " .
    
1 e .
    "
1 m .
    "e
1 p .
    "em
1 l .
    "emp
1 o .
    "empl
1 y .
    "emplo
1 e .
    "employ
1 e .
    "employe
1 " .
    "employee
1 : .
    "employee"
1   .
    "employee":
2 { .
    "employee": 
2 
 .
    "employee": {
2   .
    "employee": {

2   .
    "employee": {
 
2   .
    "employee": {
  
2   .
    "employee": {
   
2   .
    "employee": {
    
2   .
    "employee": {
     
2   .
    "employee": {
      
2   .
    "employee": {
       
2 " .
    "employee": {
        
2 i .
    "employee": {
        "
2 d .
    "employee": {
        "i
2 " .
    "employee": {
        "id
2 : .
    "employee": {
        "id"
2   .
    "employee": {
        "id":
2 3 .
    "employee": {
        "id": 
2 4 .
    "employee": {
        "id": 3
2 
 .
    "employee": {
        "id": 34
2   .
    "employee": {
        "id": 34

2   .
    "employee": {
        "id": 34
 
2   .
    "employee": {
        "id": 34
  
2   .
    "employee": {
        "id": 34
   
1 
 .
1   .

1   .
 
1   .
  
1   .
   
1   .
    
1   .
     
1   .
      
1   .
       
1 " .
        
1 i .
        "
1 d .
        "i
1 " .
        "id
1 : .
        "id"
1   .
        "id":
1 3 .
        "id": 
1 4 .
        "id": 3
1 
 .
        "id": 34
1   .
        "id": 34

1   .
        "id": 34
 
1   .
        "id": 34
  
1   .
        "id": 34
   
{id=34} 0 teskt siia
1 
 .
    "employee": {
        "id": 34
    }
1 
 .
1   .

1   .
 
1   .
  
1   .
   
1   .
    
1   .
     
1   .
      
1   .
       
1 " .
        
1 i .
        "
1 d .
        "i
1 " .
        "id
1 : .
        "id"
1   .
        "id":
1 3 .
        "id": 
1 4 .
        "id": 3
1 
 .
        "id": 34
1   .
        "id": 34

1   .
        "id": 34
 
1   .
        "id": 34
  
1   .
        "id": 34
   
{id=34} 0 teskt siia
{employee={id=34}} 0 teskt siia
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
